* c++

```c++
class Solution {
public:
    vector<int> topStudents(vector<string>& positive_feedback, vector<string>& negative_feedback, vector<string>& report, vector<int>& student_id, int k) {
        int n=report.size();
        unordered_set<string> a, b;
        unordered_map<int, int> M(n);
        for(auto &s: positive_feedback)
            a.emplace(s);
        for(auto &s: negative_feedback)
            b.emplace(s);
        for(int i=0;i<n;i++){
            stringstream ss(report[i]);
            string s;
            while(ss>>s){
                if(a.count(s))
                    M[student_id[i]] += 3;
                else if(b.count(s))
                    M[student_id[i]]--;
            }
        }
        sort(student_id.begin(), student_id.end(), [&](int x, int y){
            if(M[x] == M[y])    return x < y;
            return M[x] > M[y];
        });
        return vector<int>(student_id.begin(), student_id.begin()+k);
    }
};
```

